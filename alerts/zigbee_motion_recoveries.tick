var db = 'home_assistant'

var rp = 'default_policy'

var measurement = 'lqi'

var groupBy = ['entity_id']

var whereFilter = lambda: "entity_id" =~ /.*motion_sensor.*_linkquality$/

var period = 5s

var name = 'zigbee_lqi_recoveries'

var idVar = name + '/{{ index .Tags "entity_id" }}'

var message = '{{ index .Tags "entity_id" }} deadman recovered'

var idTag = 'alertID'

var levelTag = 'level'

var messageField = 'message'

var durationField = 'duration'

var outputDB = 'alerts'

var outputRP = 'autogen'

var outputMeasurement = 'motion_alerts'

var triggerType = 'deadman'

var threshold = 1.0

var data = stream
    |from()
        .database(db)
        .retentionPolicy(rp)
        .measurement(measurement)
        .groupBy(groupBy)
        .where(whereFilter)

var trigger = data
    |deadman(threshold, period)
        .stateChangesOnly()
        .message(message)
        .id(idVar)
        .idTag(idTag)
        .levelTag(levelTag)
        .messageField(messageField)
        .durationField(durationField)

trigger
    |eval(lambda: "emitted")
        .as('value')
        .keep('value', messageField, durationField)
    |eval(lambda: float("value"))
        .as('value')
        .keep()
    |where(lambda: "level" == 'OK')
    |influxDBOut()
        .create()
        .database(outputDB)
        .retentionPolicy(outputRP)
        .measurement(outputMeasurement)
        .tag('alertName', name)
        .tag('triggerType', triggerType)

